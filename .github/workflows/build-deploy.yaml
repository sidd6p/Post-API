name: Build and Deploy Code

on:
  push:
    branches:
      - main

jobs:
  Setup: 
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{secrets.DB_HOST}}
      DB: ${{secrets.DB}}
      TEST_DB: ${{secrets.Action-Post-DB}}
      DB_USER: ${{secrets.DB_USER}}
      DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      JWT_ALGORITHM: ${{secrets.JWT_ALGORITHM}}
      JWT_EXPIRATION_TIME_IN_MINUTE: ${{secrets.JWT_EXPIRATION_TIME_IN_MINUTE}}
    services: 
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DB_PASSWORD}}
          POSTGRES_DB: ${{secrets.DB}}
        ports: 
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check Ubuntu
        run: echo "Hello Earth from Ubuntu!"
      - name: Pull the code
        uses: actions/checkout@v4
      - name: Install Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' 
      - name: Update pip
        run: pip install --upgrade pip

      - name: Install Dependencies
        run: pip install -r requirements.txt
      
      - name: Run tests
        run: pytest -v -s --disable-warnings -x
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/public-post-api:latest
